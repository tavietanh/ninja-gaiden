#include "TestSpriteState.h"
int Move = 0;
void TestSpriteState::InitializeState(LPDIRECT3DDEVICE9 _lpDirectDevice)
{
	testSprite = SpriteManager::getInstance()->getSprite(eSpriteID::SPRITE_MAP_1);
	m_Ninja = new Ninja(D3DXVECTOR3(100, 200, 1), eDirection::RIGHT);
}

float scalexxx = 1.0f;
int Map[11][128] = {
{ 0,1,1,2,1,1,1,2,3,2,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,2,3,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
{ 4,0,1,5,6,7,1,8,9,5,9,1,1,1,1,1,1,10,11,12,1,1,1,1,1,1,1,1,1,10,11,12,1,1,1,1,1,10,11,12,1,1,1,1,1,5,9,5,9,1,1,10,11,12,1,1,1,10,11,12,1,5,6,7,2,7,1,8,6,7,1,1,1,1,1,10,11,12,1,1,1,1,1,10,11,12,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,12,1,1,1,10,11,12,1,1,1,1,10,12,1,1,1,1,1,10,11,12},
{ 4,13,1,14,15,16,17,18,17,18,17,1,1,1,1,1,1,19,19,20,19,1,21,22,19,20,21,22,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,17,18,17,1,1,1,1,1,1,1,1,1,1,1,1,14,15,16,15,16,17,18,15,16,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,23,24,24,25,1,1,1,1,1,19,19,20,21,22,19,1,1,19,19,1,19,20,21,22,1,1,1,1,1,1,1,1,1,1,1,1},
{ 26,27,1,18,28,29,30,18,30,18,30,1,10,12,1,1,21,31,32,32,32,33,31,34,32,32,31,34,22,1,1,1,1,1,10,12,1,1,1,1,1,1,1,1,1,18,30,18,30,1,1,1,1,1,1,1,1,1,1,1,1,18,28,29,28,29,30,18,28,29,30,1,10,12,1,1,1,1,1,1,1,1,1,1,1,1,10,12,1,1,1,1,35,36,36,37,1,10,11,12,21,31,32,32,31,34,32,22,21,31,32,33,32,32,31,34,22,1,1,10,11,12,1,1,1,1,1,1},
{ 38,27,1,18,39,28,40,18,40,18,40,1,1,1,1,41,42,43,42,43,42,43,43,44,42,43,43,44,42,45,1,1,1,1,1,19,19,20,21,22,1,20,1,1,1,18,40,18,40,1,1,1,23,24,24,24,24,24,24,25,1,18,39,28,39,28,40,18,39,28,40,1,1,1,1,1,23,25,1,1,23,24,24,24,24,25,1,1,1,1,23,25,35,36,36,37,1,1,1,41,42,43,42,43,43,44,42,43,43,44,42,43,42,43,43,44,42,45,1,1,1,19,19,20,1,20,21,22},
{ 38,46,47,48,49,50,51,50,51,50,52,53,47,48,48,54,55,54,55,54,55,54,49,55,55,54,49,55,55,54,52,48,52,53,41,43,42,42,43,43,56,42,45,1,47,48,51,50,52,53,1,1,35,36,36,36,36,36,36,37,47,48,49,50,49,50,51,50,49,50,52,53,47,48,52,53,35,37,1,1,35,36,36,36,36,37,1,1,1,1,35,37,35,36,36,37,47,48,48,54,55,54,55,54,49,55,55,54,49,55,55,54,55,54,49,55,55,54,52,53,41,43,42,42,56,42,43,43},
{ 57,58,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,23,25,35,36,36,36,36,36,36,37,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,61,59,59,35,36,36,36,36,37,59,59,23,25,60,61,35,36,36,37,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59},
{ 62,58,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,35,37,35,36,36,36,36,36,36,37,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,35,37,63,63,35,36,36,36,36,37,63,63,35,37,35,37,35,36,36,37,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63},
{ 64,65,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,63,63,23,25,63,63,23,25,63,63,23,25,63,63,23,25,60,61,35,36,36,36,36,36,36,37,63,63,63,63,23,24,24,25,63,63,68,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,67,60,61,60,61,35,36,36,37,63,63,63,63,69,63,63,63,69,63,63,63,69,63,63,63,68,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66},
{ 65,65,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,63,63,72,73,63,63,72,73,63,63,72,73,63,63,72,73,72,73,72,74,74,74,74,74,74,73,63,63,63,63,72,74,72,73,63,63,75,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,71,72,73,72,73,72,74,74,73,63,63,63,63,76,63,63,63,76,63,63,63,76,63,63,63,75,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70},
{ 77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,78,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,78,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77}
};

void TestSpriteState::HandleInput()
{
	if (CInputDx9::getInstance()->IsKeyDown(DIK_UP))
	{
		scalexxx++;
	}
	if (CInputDx9::getInstance()->IsKeyDown(DIK_DOWN))
	{
		scalexxx--;
	}
	m_Ninja->HandleInput();
}

void TestSpriteState::Update()
{

	Camera::getInstance()->UpdateCamera(&m_Ninja->getPositionVec3());
	m_Ninja->UpdateAnimation();
	m_Ninja->UpdateMovement();
}
void TestSpriteState::Render(SPRITEHANDLE _lpDSpriteHandle)
{
	RenderMap(_lpDSpriteHandle);
	m_Ninja->Render(_lpDSpriteHandle);
}

void TestSpriteState::Pause()
{

}

void TestSpriteState::Resume()
{

}

void TestSpriteState::Release()
{
	testSprite = 0;
}

void TestSpriteState::RenderMap(SPRITEHANDLE _lpDSpriteHandle)
{
	int x = 0, y = 0;
	for (int i = 10; i >=0; i--)
	{
		x = 0;
		for (int j = 0; j < 128; j++)
		{
			testSprite->RenderAtFrame(_lpDSpriteHandle, D3DXVECTOR2(x, y+CENTERY/2), ESpriteEffect::None, 1.0f, 1.0f, 1.0f, 0xffffffff, Map[i][j]);
			x += 16;
		}
		y += 16;
	}
}